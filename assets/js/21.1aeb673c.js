(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{466:function(e,t,a){"use strict";a.r(t);var s=a(35),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"platforms"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#platforms"}},[e._v("#")]),e._v(" Platforms")]),e._v(" "),a("h2",{attrs:{id:"prerequisites-for-the-development-git-hub-user-s-guide"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites-for-the-development-git-hub-user-s-guide"}},[e._v("#")]),e._v(" Prerequisites for the development: git(hub) user's guide")]),e._v(" "),a("p",[e._v("As a developer, you first have to sign up to "),a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github"),a("OutboundLink")],1),e._v(" to be able to contribute to ezPAARSE and:")]),e._v(" "),a("ul",[a("li",[e._v("write a new parser")]),e._v(" "),a("li",[e._v("maintain an existing parser")]),e._v(" "),a("li",[e._v("contribute to improvements in the core of ezPAARSE's code")])]),e._v(" "),a("p",[e._v("You then need to know a few "),a("a",{attrs:{href:"http://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("git"),a("OutboundLink")],1),e._v(" commands:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#get a local version of the github")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/ezpaarse-project/ezpaarse.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#if you already had the project, update it")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ezpaarse/\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#edit a file")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" ezpaarse/\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"// my modification"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">>")]),e._v(" ./app.js\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#get an overview of which files have been modified/added/deleted (before a commit)")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" status\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#compare the local modifications with the local repository, line by line, before saving the modifications")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("diff")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#send the modifications to you local repository")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit ./app.js -m "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"a comment explaining my modification"')]),e._v('"\n\n'),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#display the list of commits")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" log\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#add a new file")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("touch")]),e._v(" ./myexamplefile\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" ./myexamplefile\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit ./myexamplefile -m "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"add an example file"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#send the (commmitted) modifications to the distant repository (authorization from the distant repo needed).")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push\n")])])]),a("p",[e._v('Note: unless you have a privileged access (from the ezPAARSE team), you must first "fork" the ezPAARSE github repository in order to work on that copy. Once you are satisfied with your changes, you can submit your work to the team by sending a '),a("a",{attrs:{href:"https://help.github.com/articles/using-pull-requests",target:"_blank",rel:"noopener noreferrer"}},[e._v('"pull request"'),a("OutboundLink")],1),e._v(". Your job will be reviewed and integrated by the team, if no problem is detected. The team then provides write access rights to regular contributors, in order to facilitate contributions.")]),e._v(" "),a("h2",{attrs:{id:"how-does-a-parser-work"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-does-a-parser-work"}},[e._v("#")]),e._v(" How does a parser work?")]),e._v(" "),a("p",[e._v("A parser takes the form of an executable "),a("code",[e._v("parser.js")]),e._v(" file accompanied by a description file "),a("a",{attrs:{href:"https://github.com/ezpaarse-project/ezpaarse-platforms/blob/master/sd/manifest.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("manifest.json"),a("OutboundLink")],1),e._v(" and a validation structure (contained in the "),a("code",[e._v("test")]),e._v(" directory, see below).")]),e._v(" "),a("p",[e._v("The executable can take two kinds of input:")]),e._v(" "),a("ul",[a("li",[e._v("a stream of URLs to analyze (one per line)")]),e._v(" "),a("li",[e._v("or stream of JSON objects (one per line) with the "),a("code",[e._v("--json")]),e._v(" option, each containing:\n"),a("ul",[a("li",[e._v("the "),a("code",[e._v("url")]),e._v(" to analyze")]),e._v(" "),a("li",[e._v("other information to qualify the access event (such as the size of the download)")])])])]),e._v(" "),a("p",[e._v("The parser outputs a stream of JSON objects, one per line and for each analyzed URL. The object may be empty if the parser doesn't find anything.")]),e._v(" "),a("p",[e._v("Its usage is documented when you call it with the "),a("code",[e._v("--help")]),e._v(" option.\nAn "),a("a",{attrs:{href:"https://github.com/ezpaarse-project/ezpaarse-platforms/blob/master/js-parser-skeleton/parser.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("example parser"),a("OutboundLink")],1),e._v(" is available.")]),e._v(" "),a("h3",{attrs:{id:"usage-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage-examples"}},[e._v("#")]),e._v(" Usage Examples")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://www.sciencedirect.com:80/science/bookseries/00652296"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" ./parser.js\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#{"unitid":"00652296","print_identifier":"0065-2296","title_id":"00652296","rtype":"BOOKSERIE","mime":"MISC"}')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{ "url": "http://www.sciencedirect.com:80/science/bookseries/00652296", "status": 200 }\'')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" ./parser.js --json\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#{"unitid":"00652296","print_identifier":"0065-2296","title_id":"00652296","rtype":"BOOKSERIE","mime":"MISC"}')]),e._v("\n")])])]),a("h2",{attrs:{id:"writing-a-parser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-a-parser"}},[e._v("#")]),e._v(" Writing a Parser")]),e._v(" "),a("p",[e._v("Parsers are written in "),a("strong",[e._v("Javascript")]),e._v(". A good knowledge of the language is not really necessary to write a parser. Most of the code being outsourced in a common file for all parsers, only the URL analysis function must be adapted, making the code short and relatively simple. Most parsers still require a basic knowledge of "),a("strong",[e._v("regular expressions")]),e._v(".")]),e._v(" "),a("p",[e._v("Writing a new parser thus consists of:")]),e._v(" "),a("ul",[a("li",[e._v("creating the manifest.json file (see below)")]),e._v(" "),a("li",[e._v("creating the test file, according to what is documented on the plaftform analysis page")]),e._v(" "),a("li",[e._v("creating the parser so that its output is conform to the test file (see below)")]),e._v(" "),a("li",[e._v("launch the validation tests (see below)")])]),e._v(" "),a("p",[e._v("Once the parser passes the tests, it can be integrated into the github repo.")]),e._v(" "),a("p",[e._v("You can either work from the "),a("code",[e._v("platforms")]),e._v(" directory in an ezPAARSE instance, or clone the "),a("a",{attrs:{href:"https://github.com/ezpaarse-project/ezpaarse-platforms",target:"_blank",rel:"noopener noreferrer"}},[e._v("ezpaarse-platforms"),a("OutboundLink")],1),e._v(" repository.")]),e._v(" "),a("p",[e._v("A "),a("a",{attrs:{href:"https://github.com/ezpaarse-project/ezpaarse-platforms/tree/master/js-parser-skeleton",target:"_blank",rel:"noopener noreferrer"}},[e._v("skeleton"),a("OutboundLink")],1),e._v(" can be used as a starting point. The directory structure and base files can be automatically generated by executing "),a("code",[e._v("make init")]),e._v(" from the root directory of the platforms (you may need to launch "),a("code",[e._v("make install")]),e._v(" before).")]),e._v(" "),a("p",[e._v("Some tools are available online to "),a("a",{attrs:{href:"http://www.regexper.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("help you in the the writing of regular expressions"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"testing-parsers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing-parsers"}},[e._v("#")]),e._v(" Testing Parsers")]),e._v(" "),a("p",[e._v("Each parser comes with the necessary to be tested: one or more files located in the "),a("code",[e._v("test")]),e._v(" subdirectory. These files are in CSV format and follow the "),a("code",[e._v("platform.version.csv")]),e._v(" pattern.")]),e._v(" "),a("p",[e._v("The test principle is represented by the following diagram:\n"),a("img",{attrs:{src:e.$withBase("/images/ezPAARSE-Test-des-Parseurs.png"),alt:"Parsers' test"}})]),e._v(" "),a("p",[e._v("For each row, values from columns prefixed with "),a("code",[e._v("in-")]),e._v(" are sent to the parser, and the result is compared with the values coming from columns prefixed with "),a("code",[e._v("out-")]),e._v(". These must be strictly identical.")]),e._v(" "),a("p",[e._v("More details about the identifiers returned by the parsers are available on "),a("RouterLink",{attrs:{to:"/essential/ec-attributes.html"}},[e._v("this page")]),e._v(".")],1),e._v(" "),a("p",[e._v("When the parser only takes an input URL (ie. no other fields prefixed with "),a("code",[e._v("in-")]),e._v("), it is possible to manually run the test file with the following command (from the directory the platform):")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#platform.version.csv is the test file")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" test/platform.version.csv "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v("/bin/csvextractor --fields"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"in-url"')]),e._v(" -c --noheader "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" ./parser.js\n")])])]),a("p",[e._v("The tests are now integrated into ezPAARSE's platforms folder (instead of coming with the core of ezPAARSE).\nIt means that ezPAARSE doesn't need to be running, as the parsers' tests are now independent.\nBefore you launch the platforms' tests, you need to setup the environment:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd platforms/\nmake install\n")])])]),a("p",[e._v("Then you can either test all parsers:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("make test\n")])])]),a("p",[e._v("or test only a selection, by naming them (use the shortnames).\nFor example, if you want to test the parsers for Nature and ScienceDirect:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("make test sd npg\n")])])]),a("p",[e._v("See the "),a("a",{attrs:{href:"https://github.com/ezpaarse-project/ezpaarse-platforms/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("ezpaarse-platforms README"),a("OutboundLink")],1),e._v(" for more information.")]),e._v(" "),a("h2",{attrs:{id:"description-of-a-parser"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#description-of-a-parser"}},[e._v("#")]),e._v(" Description of a parser")]),e._v(" "),a("p",[e._v("The parser is described by a "),a("code",[e._v("manifest.json")]),e._v(" file, located in its root directory.\nThis file contains the following information:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("name")]),e._v(": the short name of the parser, used as a prefix to the file names. Care should be taken not to use a name already used.")]),e._v(" "),a("li",[a("strong",[e._v("version")]),e._v(": the current version of the parser. It is used in the validation file names parsers.")]),e._v(" "),a("li",[a("strong",[e._v("longname")]),e._v(": the long name of the parser, used in the documentation.")]),e._v(" "),a("li",[a("strong",[e._v("describe")]),e._v(": the description for the parser, can be a paragraph.")]),e._v(" "),a("li",[a("strong",[e._v("docurl")]),e._v(": the URL of the documentation on the analogist website (must end by /).")]),e._v(" "),a("li",[a("strong",[e._v("domains")]),e._v(": an array of domains that the parser can handle.")]),e._v(" "),a("li",[a("strong",[e._v("pkb-domains")]),e._v(": if the platform has a PKB and if domains are present, this field is the column that contains them,")])]),e._v(" "),a("h2",{attrs:{id:"vendors-pkbs-management-principles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vendors-pkbs-management-principles"}},[e._v("#")]),e._v(" Vendors' PKBs management principles")]),e._v(" "),a("p",[e._v("Knowledge bases are used to:")]),e._v(" "),a("ul",[a("li",[e._v("match the identifiers found on publishers platforms (which can be specific and proprietary) and standardized identifiers (like ISSNs)")]),e._v(" "),a("li",[e._v("include the titles of accessed resources in the results")])]),e._v(" "),a("p",[e._v("Knowledge bases are saved as text file "),a("a",{attrs:{href:"http://www.uksg.org/kbart/s1/summary",target:"_blank",rel:"noopener noreferrer"}},[e._v("KBART format"),a("OutboundLink")],1),e._v(" and are specific to each platform.\nThe "),a("code",[e._v("platform_AllTitles.txt")]),e._v(" file contains the mappings between identifiers of a specific platform and ISSN (or other standardized identifier). The KBART field called "),a("code",[e._v("title_id")]),e._v(" is used to establish this correspondence with the "),a("code",[e._v("print_identifier")]),e._v(" field (for paper resources) or "),a("code",[e._v("online_identifier")]),e._v(" (electronic resources). The "),a("a",{attrs:{href:"http://www.uksg.org/kbart/s5/guidelines/data_field_labels",target:"_blank",rel:"noopener noreferrer"}},[e._v("list of KBART fields"),a("OutboundLink")],1),e._v(" and their meaning is available.")]),e._v(" "),a("p",[e._v("Knowledge bases are loaded by ezPAARSE and their structure must be previously controlled by the "),a("RouterLink",{attrs:{to:"/development/tools.html#pkbvalidator"}},[e._v("pkbvalidator tool")])],1),e._v(" "),a("p",[a("RouterLink",{attrs:{to:"/essential/knowledge-base.html"}},[e._v("More about knowledge bases")])],1)])}),[],!1,null,null,null);t.default=r.exports}}]);